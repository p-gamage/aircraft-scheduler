{"version":3,"sources":["components/Aircrafts/Aircraft.js","components/common/Title.js","components/Aircrafts/index.js","components/Flights/Flight.js","components/common/InfoAlert.js","components/Flights/index.js","components/Rotation/index.js","lib/sortFlightsByTime.js","components/App.js","lib/updateFlights.js","lib/constants.js","api/index.js","lib/computeAircraftUtilisation.js","serviceWorker.js","index.js"],"names":["Aircraft","aircraft","selected","handleClick","utilisation","Paper","variant","ListItem","button","ident","onClick","divider","ListItemText","primary","Math","round","style","textAlign","Title","text","Typography","align","children","Aircrafts","aircrafts","select","List","map","key","Flight","flight","disabled","marginBottom","Box","width","component","color","display","justifyContent","alignItems","ListItemIcon","origin","secondary","readable_departure","destination","readable_arrival","flex","InfoAlert","titleText","body","Alert","severity","AlertTitle","Flights","flights","selectedFlights","length","Rotation","selectedAircraft","includes","sort","a","b","arrivaltime","departuretime","App","useState","setAircrafts","setFlights","setSelectedAircraft","setSelectedFlights","removedFlights","setRemovedFlights","availableFlights","setAvailableFlights","setUtilisation","selectFlight","sortedFlights","filter","selectedFlight","sortFlightsByTime","flightsToAdd","updatedFlights","available","removed","forEach","push","updateFlights","useEffect","sum","computeAircraftUtilisation","selectFlightMessage","Grid","container","justify","spacing","alignContent","item","xs","rotationAndFlights","Divider","orientation","flexItem","className","margin","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.e44c3469.chunk.js","sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { ListItem, ListItemText, Paper } from \"@material-ui/core\";\n\nconst Aircraft = ({ aircraft, selected, handleClick, utilisation }) => (\n  <Paper variant=\"outlined\">\n    <ListItem\n      button\n      selected={selected === aircraft.ident}\n      onClick={() => handleClick(aircraft.ident)}\n      divider\n    >\n      <ListItemText\n        primary={\n          utilisation > 0\n            ? `${aircraft.ident} (${Math.round(utilisation)}%)`\n            : aircraft.ident\n        }\n        style={{ textAlign: \"center\" }}\n      />\n    </ListItem>\n  </Paper>\n);\n\nexport default Aircraft;\n\nAircraft.propTypes = {\n  aircraft: PropTypes.object.isRequired,\n  selected: PropTypes.string.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  utilisation: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Typography } from \"@material-ui/core\";\n\nconst Title = ({ text }) => (\n  <Typography variant=\"h5\" align=\"center\" children={text} />\n);\n\nexport default Title;\n\nTitle.propTypes = {\n  text: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"@material-ui/core\";\nimport Aircraft from \"./Aircraft\";\nimport Title from \"../common/Title\";\n\nconst Aircrafts = ({ aircrafts, select, selected, utilisation }) => (\n  <>\n    <Title text=\"Aircrafts\" />\n    <List>\n      {aircrafts.map((aircraft) => (\n        <Aircraft\n          key={aircraft.ident}\n          aircraft={aircraft}\n          selected={selected}\n          handleClick={select}\n          utilisation={utilisation}\n        />\n      ))}\n    </List>\n  </>\n);\n\nexport default Aircrafts;\n\nAircrafts.propTypes = {\n  aircrafts: PropTypes.array.isRequired,\n  select: PropTypes.func.isRequired,\n  selected: PropTypes.string.isRequired,\n  utilisation: PropTypes.number.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {\n  ListItem,\n  ListItemText,\n  Typography,\n  Box,\n  ListItemIcon,\n  Paper,\n} from \"@material-ui/core\";\nimport FlightTakeoffOutlinedIcon from \"@material-ui/icons/FlightTakeoffOutlined\";\nimport FlightLandOutlinedIcon from \"@material-ui/icons/FlightLandOutlined\";\n\nconst Flight = ({ flight, selected, handleClick, disabled }) => {\n  return (\n    <Paper variant=\"outlined\" style={{ marginBottom: \"1rem\" }}>\n      <ListItem\n        button\n        selected={selected}\n        onClick={() => handleClick(flight)}\n        divider\n        disabled={disabled}\n      >\n        <Box width=\"100%\">\n          <Typography component=\"h3\" color=\"primary\" align=\"center\">\n            {flight.ident}\n          </Typography>\n          <Box\n            display=\"flex\"\n            justifyContent=\"space-between\"\n            alignItems=\"center\"\n          >\n            <ListItemIcon>\n              <FlightTakeoffOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={flight.origin}\n              secondary={flight.readable_departure}\n            />\n            <ListItemIcon>\n              <FlightLandOutlinedIcon />\n            </ListItemIcon>\n            <ListItemText\n              primary={flight.destination}\n              secondary={flight.readable_arrival}\n              style={{ flex: \"none\" }}\n            />\n          </Box>\n        </Box>\n      </ListItem>\n    </Paper>\n  );\n};\n\nexport default Flight;\n\nFlight.propTypes = {\n  flight: PropTypes.object.isRequired,\n  handleClick: PropTypes.func.isRequired,\n  selected: PropTypes.bool,\n  disabled: PropTypes.bool,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Alert, AlertTitle } from \"@material-ui/lab\";\n\nconst InfoAlert = ({ titleText, body }) => (\n  <Alert severity=\"info\">\n    <AlertTitle style={{ textAlign: \"left\" }}>{titleText}</AlertTitle>\n    {body}\n  </Alert>\n);\n\nexport default InfoAlert;\n\nInfoAlert.propTypes = {\n  titleText: PropTypes.string.isRequired,\n  body: PropTypes.string.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"@material-ui/core\";\nimport Flight from \"./Flight\";\nimport Title from \"../common/Title\";\nimport InfoAlert from \"../common/InfoAlert\";\n\nconst Flights = ({ flights, select, selectedFlights }) => (\n  <>\n    <Title text=\"Flights\" />\n    {flights.length === 0 && selectedFlights.length === 0 && (\n      <InfoAlert titleText=\"Loading flights...\" body=\"Please be patient\" />\n    )}\n    <List>\n      {flights.length === 0 && selectedFlights.length > 0 ? (\n        <InfoAlert\n          titleText=\"No more flights left\"\n          body=\"Edit rotation or refresh the page to start again\"\n        />\n      ) : (\n        flights.map((flight) => (\n          <Flight key={flight.ident} flight={flight} handleClick={select} />\n        ))\n      )}\n    </List>\n  </>\n);\n\nexport default Flights;\n\nFlights.propTypes = {\n  flights: PropTypes.array.isRequired,\n  select: PropTypes.func.isRequired,\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport { List } from \"@material-ui/core\";\nimport Flight from \"../Flights/Flight\";\nimport Title from \"../common/Title\";\nimport InfoAlert from \"../common/InfoAlert\";\n\nconst Rotation = ({ flights, select, selected, selectedAircraft }) => (\n  <>\n    <Title text={`Rotation ${selectedAircraft}`} />\n    {selected.length > 0 ? (\n      <List>\n        {flights.map((flight) => (\n          <Flight\n            key={flight.ident}\n            flight={flight}\n            selected={selected.includes(flight)}\n            handleClick={select}\n            disabled={selected[selected.length - 1].ident !== flight.ident}\n          />\n        ))}\n      </List>\n    ) : (\n      <InfoAlert\n        titleText=\"Select a flight\"\n        body=\"Please select one from the right to start the rotation\"\n      />\n    )}\n  </>\n);\n\nexport default Rotation;\n\nRotation.propTypes = {\n  flights: PropTypes.array.isRequired,\n  select: PropTypes.func.isRequired,\n  selected: PropTypes.array.isRequired,\n  selectedAircraft: PropTypes.string,\n};\n","export default (flights) =>\n  flights\n    .sort((a, b) => a.arrivaltime - b.arrivaltime)\n    .sort((a, b) => a.departuretime - b.departuretime);\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport { getFlights, getAircrafts } from \"../api\";\nimport Aircrafts from \"./Aircrafts\";\nimport Flights from \"./Flights\";\nimport Rotation from \"./Rotation\";\nimport { Grid, Divider } from \"@material-ui/core\";\nimport sortFlightsByTime from \"../lib/sortFlightsByTime\";\nimport updateFlights from \"../lib/updateFlights\";\nimport computeAircraftUtilisation from \"../lib/computeAircraftUtilisation\";\nimport InfoAlert from \"./common/InfoAlert\";\n\nfunction App() {\n  const [aircrafts, setAircrafts] = useState([]);\n  const [flights, setFlights] = useState([]);\n\n  const [selectedAircraft, setSelectedAircraft] = useState(\"\");\n  const [selectedFlights, setSelectedFlights] = useState([]);\n\n  const [removedFlights, setRemovedFlights] = useState({});\n  const [availableFlights, setAvailableFlights] = useState({});\n\n  const [utilisation, setUtilisation] = useState(0);\n\n  const selectFlight = (flight) => {\n    if (selectedFlights.includes(flight)) {\n      setSelectedFlights(\n        selectedFlights.filter(\n          (selectedFlight) => selectedFlight.ident !== flight.ident\n        )\n      );\n\n      let sortedFlights;\n\n      if (selectedFlights.length < 2) {\n        sortedFlights = sortFlightsByTime([\n          ...availableFlights[flight.ident],\n          ...removedFlights[flight.ident],\n        ]);\n      } else {\n        sortedFlights = sortFlightsByTime([\n          ...availableFlights[\n            selectedFlights[selectedFlights.length - 2].ident\n          ],\n        ]);\n      }\n\n      setFlights(sortedFlights);\n    } else {\n      setSelectedFlights([...selectedFlights, flight]);\n\n      let flightsToAdd = [];\n\n      if (selectedFlights.length > 0) {\n        flightsToAdd =\n          removedFlights[selectedFlights[selectedFlights.length - 1].ident];\n      }\n\n      const updatedFlights = updateFlights(\n        [...flights, ...flightsToAdd],\n        flight\n      );\n\n      setFlights(sortFlightsByTime(updatedFlights.available));\n\n      setAvailableFlights({\n        ...availableFlights,\n        [flight.ident]: updatedFlights.available,\n      });\n\n      setRemovedFlights({\n        ...removedFlights,\n        [flight.ident]: updatedFlights.removed,\n      });\n    }\n  };\n\n  useEffect(() => {\n    setAircrafts(getAircrafts());\n  }, []);\n\n  useEffect(() => {\n    const sortedFlights = sortFlightsByTime(getFlights());\n    selectedAircraft && setFlights(sortedFlights);\n  }, [selectedAircraft]);\n\n  useEffect(() => {\n    const utilisation = computeAircraftUtilisation(selectedFlights);\n    setUtilisation(utilisation);\n  }, [selectedFlights]);\n\n  const selectFlightMessage = (\n    <Grid container justify=\"center\" spacing={3} alignContent=\"center\">\n      <Grid item xs={6}>\n        <InfoAlert\n          titleText=\"Select aircraft\"\n          body=\"Please select the aircraft from the left to see the flights\"\n        />\n      </Grid>\n    </Grid>\n  );\n\n  const rotationAndFlights = (\n    <>\n      <Grid item xs={6}>\n        <Rotation\n          flights={selectedFlights}\n          select={selectFlight}\n          selected={selectedFlights}\n          selectedAircraft={selectedAircraft}\n        />\n      </Grid>\n      <Divider orientation=\"vertical\" flexItem />\n      <Grid item xs>\n        <Flights\n          flights={flights}\n          select={selectFlight}\n          selectedFlights={selectedFlights}\n        />\n      </Grid>\n    </>\n  );\n\n  return (\n    <div className=\"App\" style={{ margin: \"1rem\" }}>\n      <Grid container spacing={2}>\n        <Grid item xs={2}>\n          <Aircrafts\n            aircrafts={aircrafts}\n            select={setSelectedAircraft}\n            selected={selectedAircraft}\n            utilisation={utilisation}\n          />\n        </Grid>\n        <Divider orientation=\"vertical\" flexItem />\n        {selectedAircraft ? rotationAndFlights : selectFlightMessage}\n      </Grid>\n    </div>\n  );\n}\n\nexport default App;\n","import { turnaroundTimeInSeconds } from \"./constants\";\n\nexport default (flights, selectedFlight) => {\n  const available = [];\n  const removed = [];\n\n  flights.forEach((flight) =>\n    flight.origin === selectedFlight.destination &&\n    flight.departuretime > selectedFlight.arrivaltime + turnaroundTimeInSeconds\n      ? available.push(flight)\n      : removed.push(flight)\n  );\n\n  return { available, removed };\n};\n","export const turnaroundTimeInSeconds = 20 * 60;\nexport const secondsInDay = 24 * 3600;\n","import aircrafts from \"./aircrafts.json\";\nimport flights from \"./flights.json\";\n\nexport const getAircrafts = () => aircrafts;\n\nexport const getFlights = () => flights;\n","import { turnaroundTimeInSeconds, secondsInDay } from \"./constants\";\n\nexport default (selectedFlights) => {\n  let sum = 0;\n\n  selectedFlights.forEach((selectedFlight) => {\n    sum +=\n      selectedFlight.arrivaltime -\n      selectedFlight.departuretime +\n      turnaroundTimeInSeconds;\n  });\n\n  const utilisation = (sum / secondsInDay) * 100;\n  return utilisation;\n};\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./components/App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}